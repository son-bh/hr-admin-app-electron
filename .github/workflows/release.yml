name: Build & Release (internal)

defaults:
  run:
    shell: bash

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
          - os: macos-latest
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci

      - name: Set version from tag (strip "v")
        run: |
          TAG="${GITHUB_REF_NAME:-${{ github.ref_name }}}"
          VERSION="${TAG#v}"
          CURRENT="$(node -p "require('./package.json').version")"

          echo "Tag: $TAG -> version: $VERSION (current: $CURRENT)"
          if [ "$CURRENT" != "$VERSION" ]; then
            npm version "$VERSION" --no-git-tag-version
          else
            echo "Version unchanged; skipping npm version"
          fi

          echo "PKG_VERSION=$(node -p "require('./package.json').version")" >> "$GITHUB_ENV"

      - name: Build & Publish (unsigned)
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          ELECTRON: 'true'
          NODE_ENV: production
          VITE_API_URL: ${{ secrets.API_URL }}
        run: |
          if [[ "${{ matrix.platform }}" == "macos-latest" ]]; then
            npm run release -- --mac --x64 --arm64
          elif [[ "${{ matrix.platform }}" == "windows-latest" ]]; then
            npm run release -- --win
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.platform }}
          path: release/**
